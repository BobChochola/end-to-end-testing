let Page = require('../../framework/models/Page.js')

class OrdersShowPage extends Page {

  get elements() {

    return {
      'id': this.by.css('div[ng-controller="OrdersShowController"] [name="orderGeneralForm"]'),
      'breadcrumb': this.by.css('[ng-controller="OrdersShowController"] h1'),
      'parent order number': this.by.css('div[ng-show*="order.parent_order"]'),
      'order status': this.by.css('div[ng-class*="order_status"]'),
      'payment status': this.by.css('div[ng-class*="payment"]'),
      'delivery status': this.by.css('div[ng-class*="order_delivery_status"]'),
      'order no': this.by.css('[label="Order No."] .field-value'),
      'order date': this.by.css('[label="Date"] div.field-value'),
      'customer name': this.by.css('[label="Order customer"]'),
      'customer email': this.by.css('[label="Email"]'),
      'customer phone': this.by.css('[label="Phone Number"]'),
      'order account details':this.by.css('div[ng-hide="customerFormOptions.submitting || customerFormOptions.edit || customer.status == \'removed\'"]'),
      'name field': this.by.css('div[label="Order customer"] [ng-if*="state.isEditing"]'),
      'email field': this.by.css('div[label="Email"] [ng-if*="state.isEditing"]'),
      'phone field': this.by.css('div[label="Phone Number"] [ng-if*="state.isEditing"]'),
      'gender field': this.by.css('div[ng-if="key === \'gender\' && checkExists(field)"]'),
      'birthday field': this.by.css('div[ng-if="key === \'birthday\' && checkExists(field)"]'),
      'payment type': this.by.css('[label="Payment Type"]'),
      'delivery method': this.by.css('[label="Delivery Method"]'),
      'recipient name': this.by.css('div:not([style*="display: none"]) div[label="Recipient Name"]'),
      'recipient phone': this.by.css('div:not([style*="display: none"]) div[label="Recipient Phone"]'),
      'delivery address': this.by.css('div[label="Delivery Address"]:not(.ng-hide) .field-group'),
      'third party recipient name': this.by.css('[data-field-name="Recipient Name"] div[ng-if="!state.isEditing"]'),
      'third party recipient phone': this.by.css('[data-field-name="Recipient Phone"] div[ng-if="!state.isEditing"]'),
      'delivery fee': this.by.css('[label="Delivery Fee"] .ng-scope:not(.ng-hide)'),
      'total': this.by.css('.order-total'),
      'customer detail link': this.by.css('[ng-click="viewOwner()"]'),

      'delivery form': this.by.css('#delivery_form'),
      'recipient name field': this.by.css('input[name="delivery_data.recipient_name"]'),
      'recipient phone field': this.by.css('input[name="delivery_data.recipient_phone"]'),
      'third party recipient name field': this.by.css('input[name="recipient_name"]'),
      'third party recipient phone field': this.by.css('input[name="recipient_phone"]'),
      'save button': this.by.css('order-section-delivery [type="submit"]'),
      'delivery method dropdown': this.by.css('[ng-change="orderDeliverySelected()"]'),
      'delivery method dropdown option': this.by.css('[ng-change="orderDeliverySelected()"] option'),
      'edit delivery detail popover': this.by.css('.OrderDeliveryEdit'),
      'delivery detail recipient name field': this.by.css('[name="deliveryChange.recipient_name"]'),
      'delivery detail recipient phone field': this.by.css('[name="deliveryChange.recipient_phone"]'),
      'sf express district dropdown': this.by.css('[name="deliveryChange.sfexpress.districtSelected"]'),
      'sf express district dropdown option': this.by.css('[name="deliveryChange.sfexpress.districtSelected"] option'),
      'sf express location dropdown': this.by.css('[name="deliveryChange.sfexpress.locationSelected"]'),
      'sf express location dropdown option': this.by.css('[name="deliveryChange.sfexpress.locationSelected"] option'),
      'delivery change agree checkbox': this.by.css('[name="deliveryAgreeChange"]'),
      'delivery change agree error message': this.by.css('.OrderDeliveryEdit [data-field-name="Confirmation"] p[ng-show="hasError"]'),
      'delivery detail save button': this.by.css('button[ng-click="save()"]'),
      'alert': this.by.css('.alert:not(.ng-hide)'),

      'update order delivery status option': this.by.css('select[ng-model="deliveryStatusFilter"]:not(.ng-hide) option'),
      'update order delivery status dropdown': this.by.css('select[ng-model="deliveryStatusFilter"]:not(.ng-hide)'),
      'yes button': this.by.css('.modal-footer button[ng-click^="confirm"]'),
      'view return button': this.by.css('button[ng-click="onOrderReturnClick()"]'),
      'order status dropdown': this.by.css('select[ng-change="onOrderStatusFilterChanged()"]'),
      'Confirmed': this.by.css('select[ng-change="onOrderStatusFilterChanged()"] option[label="Confirmed"]'),
      'Open': this.by.css('select[ng-change="onOrderStatusFilterChanged()"] option[label="Open"]'),
      'Completed': this.by.css('select[ng-change="onOrderStatusFilterChanged()"] option[label="Completed"]'),
      'Cancelled': this.by.css('select[ng-change="onOrderStatusFilterChanged()"] option[label="Cancelled"]'),
      'revert credit checkbox': this.by.css('[ng-repeat="option in radioOptions"]'),
      
      'credit revert status': this.by.css('[ng-show*="order.revert_credit"]:not(.ng-hide)'),
      'extend credit expires button': this.by.css('[ng-click="openExtendField(transaction)"]'),
      'extend days field': this.by.css('[ng-model="transaction.validPeriod"]'),
      'never expires checkbox': this.by.css('[ng-model="transaction.isEternal"]'),
      'revert credit popover': this.by.css('.revert-status-container'),
      'confirm popover': this.by.css('.modal-dialog'),
      'send notification checkbox': this.by.css('[ng-show="showCheckbox"]'),
      're create receipt': this.by.css('div:not(.ng-hide).checkbox .radio label'),
      'YES button': this.by.css('.modal-footer  button[ng-click="confirm()"]:not(.ng-hide)'),
      'payment status dropdown': this.by.css('select[ng-change="onPaymentStatusFilterChanged()"]:not(.ng-valid-parse)'),
      'Paid': this.by.css('select[ng-change="onPaymentStatusFilterChanged()"] option[label="Paid"]'),
      'Refunding': this.by.css('select[ng-change="onPaymentStatusFilterChanged()"] option[label="Refunding"]'),
      'Refunded': this.by.css('select[ng-change="onPaymentStatusFilterChanged()"] option[label="Refunded"]'),
      'delivery status dropdown': this.by.css('select[ng-change="onDeliveryStatusFilterChanged()"]:not(.ng-valid-parse)'),
      'Shipped': this.by.css('select[ng-change="onDeliveryStatusFilterChanged()"] option[label="Shipped"]'),
      'Arrived': this.by.css('select[ng-change="onDeliveryStatusFilterChanged()"] option[label="Arrived"]'),
      'Collected': this.by.css('select[ng-change="onDeliveryStatusFilterChanged()"] option[label="Collected"]'),
      'order invoice button': this.by.css('.order-detail-hint > div.buttons > a[ng-href$="invoice.pdf"] > button'),
      'order slip button': this.by.css('[href*="packing_slip.pdf"] button'),
      'resend notification button': this.by.css('[ng-click="sendNotification()"]'),
      'print order button': this.by.css('.order-detail-hint > div.buttons > a'),
      'total': this.by.css('div.order-detail.order-total'),

      'product details': this.by.css('form[name="orderDetailForm"]'),
      'return order confirm view': this.by.css('[ng-controller="ReturnOrdersFormController"] [ng-click^="createReturnOrder"]'),
      'place return button': this.by.css('button[ng-click="createReturnOrder()"]'),
      'popover': this.by.css('.modal.fade.ng-isolate-scope.dialogbox-modal-window.in > div > div'),
      'OK button': this.by.css('.modal-footer button[ng-click^="confirm"]:not(.ng-hide)'),
      'detail error message': this.by.css('p.text-danger.ng-binding.ng-scope'),
      'print label dropdown': this.by.css('order-integrated-label .dropdown-toggle'),
      'print label dropdown option': this.by.css('order-integrated-label li'),

      'express location': this.by.css('[label="SF Express Location"]'),

      'customer form edit button': this.by.css('order-section-customer [ng-click="setEditing(true)"]:not(.ng-hide)'),
      'delivery form edit button': this.by.css('order-section-delivery [ng-click="setEditing(true)"]:not(.ng-hide)'),
      'gender dropdown option': this.by.css('select[ng-model="field.value"] option'),
      'gender dropdown': this.by.css('select[ng-model="field.value"]'),
      'customer birthday': this.by.css('input[name="birthday"]'),
      'customer custom field': this.by.css('input[ng-model="field.value"]'),
      'customer save button': this.by.css('button[ng-disabled="!customerForm.$dirty"]'),
      'delivery save button': this.by.css('button[ng-show="state.isEditing"]:not(.ng-hide)'),

      'order edit button': this.by.css('#order_general_form [ng-click="setEditing(true)"]:not(.ng-hide)'),
      'custom field': this.by.css('[ng-class="input_class"] [ng-model="field.value"]'),
      'order save button': this.by.css('#order_general_form button[type="submit"]'),
      'custom field text': this.by.css('[ng-repeat="field in order.custom_fields_translations"]'),
      'order detail': this.by.css('form[name="orderDetailForm"]'),
      'credit': this.by.css('[ng-show="order.user_credit"'),
      'reassign order button': this.by.css('[ng-click="openUserPicker()"]'),
      'select reassign popover': this.by.css('div.dialogbox.user-picker.ng-scope'),
      'customer search field': this.by.css('input[ng-model="searchString"]'),
      'customer checkbox': this.by.css('input[name="selectedUser"]'),
      'popup ok button': this.by.css('button[ng-click="save()"]'),
      'send email checkbox': this.by.css('input[ng-model="sendEmail"][ng-value="true"]'),

      'Unpaid': this.by.css('select[ng-change="onPaymentStatusFilterChanged()"] option[label="Unpaid"]'),
      'Unfulfilled': this.by.css('select[ng-change="onDeliveryStatusFilterChanged()"] option[label="Unfulfilled"]'),
      'Returned': this.by.css('select[ng-change="onDeliveryStatusFilterChanged()"] option[label="Returned"]'),
      'Returning': this.by.css('select[ng-change="onDeliveryStatusFilterChanged()"] option[label="Returning"]'),
      'comments tab': this.by.css('[ng-controller="CommentsFormController"] a'),
      'comments field': this.by.css('.box-body:not(.ng-hide) textarea:not(.ng-hide)'),
      'customer comments field': this.by.css('textarea[placeholder="Enter replies to the customer"]'),
      'send button': this.by.css('button:not([disabled])#btn-form-submit'),
      'delivery comment submit button': this.by.css('[ng-click="submitRemarkForm()"]'),
      'delivery comment delete button': this.by.css('[ng-click="deleteRemark()"]'),
      'delivery comment hint': this.by.css('.remark-hint'),
      'delivery comment error': this.by.css('.order-delivery-remark-form p.help-block'),
      'order message content': this.by.css('li[ng-repeat="comment in comments"]'),
      'order message image': this.by.css('li[ng-repeat="comment in comments"] div.media-body img'),

      'create receipt button': this.by.css('button[ng-click="createInvoice()"]'),
      'receipt details alert': this.by.css('div[ng-show="invoiceSuccessMessage"]'),
      'invoice number': this.by.css('sl-order-invoice [ng-repeat*="invoice in invoiceData"]>div:nth-child(1)>div>div:nth-child(2)>div:nth-child(2)'),
      'invoice status': this.by.css('sl-order-invoice [ng-repeat*="invoice in invoiceData"]>div:nth-child(3)>div>div:nth-child(2)>div:nth-child(2)'),
      'invoice date': this.by.css('sl-order-invoice [ng-repeat*="invoice in invoiceData"]>div:nth-child(2)>div>div:nth-child(2)>div:nth-child(2)'),
      'donate group': this.by.css('[label="Donation Units"]'),
      'cancel receipt button': this.by.css('button[ng-click="cancelInvoice()"]'),
      'invoice type': this.by.css('div.order-change-invoice-type'),
      'change invoice tax type button': this.by.css('div.order-change-invoice-type button[ng-click="changeInvoiceTaxType()"]'),
      'popover taxable checkbox': this.by.css('input[value="1"]'),
      'popover tax free checkbox': this.by.css('input[value="3"]'),
      'popover confirm button': this.by.css('button[ng-click="confirm()"]'),
      'reason field': this.by.css('textarea[id="reason_text"]'),
      'send reason button': this.by.css('button[ng-click="clickCancelInvoice()"]'),
      'print labels button': this.by.css('button[class]:not(.ng-hide)[ng-click="printLabel()"]'),
      'execute shipment button': this.by.css('button[ng-click="executeShipment()"]'),
      'attention alert': this.by.css('div[class="modal-header ng-binding"]'),
      'image selector': this.by.css('input[ng-file-select="onFileSelect($files)"]'),

      'product details edit button': this.by.css('button[ng-click="onEditDetailClick()"]'),
      'product details edit reminder': this.by.css('div[class="modal-header ng-binding"]'),
      'reminder ok button': this.by.css('button[ng-disabled="recheckboxMessage && !recheckboxDialog"]'),
      'product quantity field': this.by.css('input[name*="item-quantity"]'),
      'add product button': this.by.css('div[ng-click="onAddProductClick()"]'),
      'add custom button': this.by.css('div[ng-click="onAddCustomProductClick()"]'),
      'add discount button': this.by.css('button[ng-click="onAddDiscountClick()"]'),
      'delete product button': this.by.css('button[ng-click="state.confirmRemove = $index"]'),
      'delete product ok button': this.by.css('button[ng-click="removeOrderitem({item: item, index: $index})"]'),
      'total change': this.by.css('[ng-class="{\'quantity-text\': state.editingOrderDetail && totalMoneySnapshot.cents != order.total.cents}"]'),
      'add discount popover': this.by.css('form[name="customItemForm"]'),
      'discount name field': this.by.css('input[id="custom-item-name"]'),
      'discount amount field': this.by.css('input[id="custom-unit-price"]'),
      'discount field': this.by.css('div[ng-show="order.promotion_items.length > 0 || order.custom_discount_items.length > 0 || state.editingOrderDetail"]'),
      'promotion discount': this.by.css('div[class="promotion-item ng-scope"]'),
      'order refund': this.by.css('div[class="pull-right ng-binding"]:nth-last-of-type(1)'),
      'product of product list': this.by.css('[ng-repeat="product in results track by product._id"]'),
      'popup save button': this.by.css('div[class="modal-dialog"] button[ng-click="save()"]'),
      'search field': this.by.css('input[ng-model="searchInput"]'),
      'color dropdown': this.by.css('.variation-selector'),
      'color dropdown option': this.by.css('.variation-selector option'),
      'size dropdown': this.by.css('select[name="item-variation-1-1"]'),
      'size dropdown option': this.by.css('select[name="item-variation-1-1"] option'),
      'product quantity reminder': this.by.css('span.text-primary.ng-binding.ng-scope'),
      'outstanding amount': this.by.css('div[class="pull-right ng-binding"]:nth-last-of-type(1)'),
      'product details save button': this.by.css('div[ng-if="state.editingOrderDetail"] button.btn-default'),
      'product details cancel button': this.by.css('button[ng-click="onCancelEditDetailClick()"]'),
      'add custom item popover': this.by.css('div[class="modal-header ng-binding"]'),
      'item name field': this.by.css('input[id="custom-item-name"]'),
      'unit price field': this.by.css('input[id="custom-unit-price"]'),
      'custom item quantity field': this.by.css('input[id="custom-quantity"]'),
      'custom item save button': this.by.css('div[class="modal-footer"] button[class="btn btn-primary ladda-button ng-binding"]'),
      'custom item field': this.by.css('div[class="order-subtotal-item ng-scope new-item"]'),
      'tax fee': this.by.css('div[ng-if*="order.total_tax_fee"]'),

      'execute shipment popover': this.by.css('div[class="modal-header ng-binding"]'),
      'print shipment label button': this.by.css('button[ng-click="printSevenC2CReceipt()"]'),
      'last printed time': this.by.css('span.print-time-label.ng-binding'),
      'split button': this.by.css('[ng-click="onOrderSplitClick()"]'),
      'order split quantity details': this.by.css('form[name="quantityForm"]'),
      'row of order split quantity field': this.by.css('input[ng-model="childOrder.subtotal_items[$index].quantity"]'),
      'child orders split button': this.by.css('button[ng-disabled="quantityForm.$invalid || isInvalidQuantity() || !isValidDeliveryPriceLimit()"]'),
      'row of payment detail': this.by.css('order-section-payment .field-value'),
      'row of product detail': this.by.css('.media.order-subtotal-item'),
      'bundle tag': this.by.css('span[class*="label-bundle-price"]'),
      'row of order activities logs': this.by.css('li[ng-repeat="log in logs"][class="ng-scope"]'),
      'confirm button': this.by.css('button[ng-click="confirm()"]'),
      'User Menu': this.by.css('[id="menu-user"]'),
      'Logout': this.by.css('a[ng-click="signout()"]'),
      'subtotal': this.by.css('form[name="orderDetailForm"] .order-detail span[ng-if="orderDetailForm.$valid"]'),
      'split alert': this.by.css('.text-danger span'),
      'edit alert': this.by.css('.text-danger.ng-binding span'),
      'cancle button': this.by.css('.modal button[ng-click="cancel()"]'),
      'success message': this.by.css('div[ng-show="successMsg"]'),

      'delivery dropdown option': this.by.css('select[ng-model="return_order.delivery_option_id"] option'),
      'delivery list dropdown': this.by.css('select[ng-model="return_order.delivery_option_id"]'),
      'pick store button': this.by.css('.modal .btn-pick-store'),
      'row of store info': this.by.css('.OrderDeliveryEdit-storeInfo tr'),
      'store info required': this.by.css('div[data-field-name="Confirmation"] .help-block'),
      'delivery shop code': this.by.css('div[label="7-11 Shop Code"] div.field-value'),
      'delivery shop name': this.by.css('div[label="7-11 Shop Name"] div.field-value'),
      'delivery shop address': this.by.css('div[label="Store address"] div.field-value'),

      //edit delivery details popup address modularize
      'popup delivery address dropdown': this.by.css('div.OrderDeliveryEdit-addressField > div > div > div > div > div > div:nth-child(n) > div > div.form-group-address > div.controls > select'),
      'popup delivery address dropdown option': this.by.css('div.OrderDeliveryEdit-addressField > div > div > div > div > div > div:nth-child(n) > div > div.form-group-address > div.controls > select > option'),
      'popup delivery address field': this.by.css('input.form-control.ng-scope.ng-pristine.ng-untouched.ng-invalid.ng-invalid-required.ng-valid-pattern'),
      'delivery address dropdown': this.by.css('div:nth-child(1) > div > div > div > div.ng-isolate-scope > div > div:nth-child(n) > div > div.form-group-address > div.controls > select'),
      'delivery address dropdown option': this.by.css('div:nth-child(1) > div > div > div > div.ng-isolate-scope > div > div:nth-child(n) > div > div.form-group-address > div.controls > select > option'),
      'delivery district dropdown': this.by.css('select[id="tw_address_2"]'),
      'delivery district dropdown option': this.by.css('select[id="tw_address_2"] option'),
      'delivery address field': this.by.css('input.form-control.ng-scope.ng-pristine.ng-untouched.ng-valid.ng-valid-required.ng-valid-pattern'),

      'execute shipment ok button': this.by.css('button[ng-click="save()"]'),
      're-execute shipment ok button': this.by.css('button[ng-disabled="recheckboxMessage && !recheckboxDialog"]'),
      'shipment number': this.by.css('div[label="Family Mart Shipment Number"] span.ng-binding.ng-scope'),
      'row of activity log list': this.by.css('.the-timeline li'),
      'logistic service order status': this.by.css('[label="Logistic Service Order Status"]'),
      'confirm description': this.by.css('.modal-body'),
      'cancel button': this.by.css('button[ng-click="cancel()"]'),
      'invoice type request': this.by.css('sl-order-invoice div[label="Type of Invoice Request"] .field-value'),
      'donation units': this.by.css('sl-order-invoice div[label="Donation Units"] .field-value'),
      'invoice company name': this.by.css('sl-order-invoice div[label="Company Name"] .field-value'),
      'invoice tax id': this.by.css('sl-order-invoice div[label="Tax ID"] .field-value'),
      'invoice address': this.by.css('sl-order-invoice div[label="Send to"] .field-value'),
      'language dropdown': this.by.css('[class*="navbar-collapse"] li[class="dropdown"]:nth-child(1)'),
      'ZH': this.by.css('[ng-click="changeLanguage(\'zh-hant\')"]'),
      'EN': this.by.css('[ng-click="changeLanguage(\'en\')"]'),
      'discount remove button': this.by.css('button[ng-click="onDeleteDiscount(custom_item)"]'),
      'product details remove button': this.by.css('button[class="close"]'),
      'product details ok button': this.by.css('button[class="btn btn-primary ng-binding"]'),
      'warehouse label': this.by.css('span[ng-if="isIntegrationOne && item.item_type === \'Product\' && item.item_id && getWarehouse({item: item}) !== undefined"]'),
      'tcat time dropdown': this.by.css('select[ng-model="deliveryTime.selectedTimeSlot"]'),
      'tcat time dropdown option': this.by.css('select[ng-model="deliveryTime.selectedTimeSlot"] option'),
      'points earned': this.by.css('[ng-if="hasMemberPointSummary"]'),
      'delivery time': this.by.css('[ng-show*="time_slot_key"] div.field-value'),
      'store pickup city dropdown': this.by.css('.OrderDeliveryEdit select[name="level_1"]'),
      'store pickup city dropdown option': this.by.css('.OrderDeliveryEdit select[name="level_1"] option'),
      'store pickup area dropdown': this.by.css('.OrderDeliveryEdit select[name="level_2"]'),
      'store pickup area dropdown option': this.by.css('.OrderDeliveryEdit select[name="level_2"] option'),
      'store pickup district dropdown': this.by.css('.OrderDeliveryEdit select[name="level_3"]'),
      'store pickup district dropdown option': this.by.css('.OrderDeliveryEdit select[name="level_3"] option'),
      'store pickup store name dropdown': this.by.css('.OrderDeliveryEdit select[name="store"]'),
      'store pickup store name dropdown option': this.by.css('.OrderDeliveryEdit select[name="store"] option'),
      'store description': this.by.css('p[ng-show="selectedStore"]'),
      'delivery date field': this.by.css('.OrderDeliveryEdit input[name="scheduled_delivery_date"]'),
      'calendar table': this.by.css('ul[ng-change="dateSelection(date)"]'),
      'enabled date': this.by.css('td button[ng-click="select(dt.date)"]:not([disabled="disabled"])'),
      'sunday disabled': this.by.css('tr td[role="gridcell"]:nth-child(1) button[disabled="disabled"]'),
      'wednesday disabled': this.by.css('tr td[role="gridcell"]:nth-child(4) button[disabled="disabled"]'),
      'delivery time dropdown': this.by.css('.OrderDeliveryEdit [name="delivery_time"]'),
      'delivery time dropdown option': this.by.css('.OrderDeliveryEdit [name="delivery_time"] option'),
      'reason for cancellation': this.by.css('div[label="Reason for Cancellation"]'),
    }

  }

  get samples() {

    return {
      'name': '陳小明',
      'edited name': '陳大明',
      'email': this.props.adminAccount.email,
      'edited email': this.props.sample.genNewEmail(),
      'edited phone': '0987654321',
      'phone': '0912345678',
      'address': '14F., No.44, Ln. 11, Guangfu N. Rd.',
      'edited address': '光復北路11巷44號13樓',
      'city': 'Taipei',
      'edited city': '200Keelung City',
      'edited district': 'Ren\'ai District',
      'order date': `${ this.props.sample.genDate().replace(/[^0-9]/g, '-')}`,
      'invoice date': `${ this.props.sample.genDate()}`,
      'message photo': `${this.props.sample.sampleImagesPath()}/2.png`,
      'recipient address': '14F., No.44, Ln. 11, Guangfu N. Rd.',
      'sf address area': 'Central',
      'shop code': '916527',
      'shop name': '清愿門市',
      'dateNow': `${ this.props.sample.genDate().replace(/[^0-9]/g, '-')}`,
      'timeNow': `${this.props.sample.genHour()}`,
      'meridianNow': `${ this.props.sample.genTwelveHourPeriod()}`,
      'special admin message content': '<test order admin content>',
      'amount of available days with exclude specific date': `${this.props.sample.genOnlyDate(1) == 1 ? (this.props.sample.genDay() == 'Saturday'? 2:3) : (this.props.sample.genDay() == 'Tuesday'? 3:2)}`,
      'full choose date': `${this.props.sample.genYear()}-${this.props.sample.genMonth()}-${this.getVariable('choose date')}`,
      'order number': `${this.getVariable('order info')}`.substr(52, 17).replace(/[^0-9]/g,''),
      'dateTomorrow': `${ this.props.sample.genDate(1,0)}`,
      'dateAfterSixDays': `${ this.props.sample.genDate(6,0)}`,
      'delivery remark description 256 character': '1234567890abcdefghijABCDEFGHI一 !@#$%^&*(+_+})1234567890abcdefghijABCDEFGHI一 !@#$%^&*(+_+})1234567890abcdefghijABCDEFGHI一 !@#$%^&*(+_+})1234567890abcdefghijABCDEFGHI一 !@#$%^&*(+_+})1234567890abcdefghijABCDEFGHI一 !@#$%^&*(+_+})1234567890abcdefghijABCDE FGHI一',

      'qa name': 'shoplineqa',
      'qa email': 'shoplineqa@gmail.com',
      'order number 2': `${this.getVariable('order info 2')}`.substr(52, 17).replace(/[^0-9]/g,'')
    }

  }


}

module.exports = OrdersShowPage
